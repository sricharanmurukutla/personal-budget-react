{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sri Charan\\\\Downloads\\\\personal-budget-react (3)\\\\personal-budget-react\\\\personal-budget-react\\\\client\\\\src\\\\HomePage\\\\LineGraph.js\";\n// LineGraph.js\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction LineGraph({\n  lineGraphData\n}) {\n  if (!lineGraphData || lineGraphData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for line graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  const data = {\n    labels: lineGraphData.map(item => item.year),\n    datasets: [{\n      label: 'Allocated',\n      data: lineGraphData.map(item => item.allocated),\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      borderWidth: 2,\n      fill: false\n    }, {\n      label: 'Used',\n      data: lineGraphData.map(item => item.used),\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)',\n      borderWidth: 2,\n      fill: false\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        type: 'category',\n        labels: lineGraphData.map(item => item.year)\n      },\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line-graph\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_c = LineGraph;\nexport default LineGraph;\nvar _c;\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","LineGraph","lineGraphData","length","children","fileName","_jsxFileName","lineNumber","columnNumber","data","labels","map","item","year","datasets","label","allocated","borderColor","backgroundColor","borderWidth","fill","used","options","scales","x","type","y","beginAtZero","className","_c","$RefreshReg$"],"sources":["C:/Users/Sri Charan/Downloads/personal-budget-react (3)/personal-budget-react/personal-budget-react/client/src/HomePage/LineGraph.js"],"sourcesContent":["// LineGraph.js\r\nimport React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction LineGraph({ lineGraphData }) {\r\n  if (!lineGraphData || lineGraphData.length === 0) {\r\n    return <p>No data available for line graph</p>;\r\n  }\r\n\r\n  const data = {\r\n    labels: lineGraphData.map(item => item.year),\r\n    datasets: [\r\n      {\r\n        label: 'Allocated',\r\n        data: lineGraphData.map(item => item.allocated),\r\n        borderColor: 'rgb(255, 99, 132)',\r\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n        borderWidth: 2,\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Used',\r\n        data: lineGraphData.map(item => item.used),\r\n        borderColor: 'rgb(53, 162, 235)',\r\n      backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n        borderWidth: 2,\r\n        fill: false,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        type: 'category',\r\n        labels: lineGraphData.map(item => item.year),\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"line-graph\">\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvCV,OAAO,CAACW,QAAQ,CACdV,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,SAASK,SAASA,CAAC;EAAEC;AAAc,CAAC,EAAE;EACpC,IAAI,CAACA,aAAa,IAAIA,aAAa,CAACC,MAAM,KAAK,CAAC,EAAE;IAChD,oBAAOJ,OAAA;MAAAK,QAAA,EAAG;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAChD;EAEA,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAER,aAAa,CAACS,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC;IAC5CC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,WAAW;MAClBN,IAAI,EAAEP,aAAa,CAACS,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACI,SAAS,CAAC;MAC/CC,WAAW,EAAE,mBAAmB;MAClCC,eAAe,EAAE,yBAAyB;MACxCC,WAAW,EAAE,CAAC;MACdC,IAAI,EAAE;IACR,CAAC,EACD;MACEL,KAAK,EAAE,MAAM;MACbN,IAAI,EAAEP,aAAa,CAACS,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACS,IAAI,CAAC;MAC1CJ,WAAW,EAAE,mBAAmB;MAClCC,eAAe,EAAE,yBAAyB;MACxCC,WAAW,EAAE,CAAC;MACdC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC;EAED,MAAME,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,IAAI,EAAE,UAAU;QAChBf,MAAM,EAAER,aAAa,CAACS,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI;MAC7C,CAAC;MACDa,CAAC,EAAE;QACDC,WAAW,EAAE;MACf;IACF;EACF,CAAC;EAED,oBACE5B,OAAA;IAAK6B,SAAS,EAAC,YAAY;IAAAxB,QAAA,eACzBL,OAAA,CAACF,IAAI;MAACY,IAAI,EAAEA,IAAK;MAACa,OAAO,EAAEA;IAAQ;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAACqB,EAAA,GA5CQ5B,SAAS;AA8ClB,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}